name: CI & Docker Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:

  test:
    name: build-test
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.set-tag.outputs.tag }}
    steps:
      - name: Set up job
        run: echo "Starting test job"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint code
        run: |
          if command -v flake8 >/dev/null 2>&1; then
            flake8 || true
          else
            echo "flake8 not installed — skipping lint"
          fi

      - name: Run tests
        run: |
          if [ -f pytest.ini ] || [ -d tests ]; then
            pytest -q
          else
            echo "No tests found — skipping"
          fi

      - name: Check DVC data (optional)
        run: |
          if [ -f dvc.yaml ]; then
            echo "DVC project detected"
            pip install dvc[s3] || true
            dvc status || true
          else
            echo "No DVC configuration found, skipping"
          fi

      - name: Set image tag output
        id: set-tag
        run: |
          TAG=latest
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Complete job
        run: echo "Test job finished"

  docker-build:
    name: docker-build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Set up job
        run: echo "Starting docker-build"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU (for multi-arch builds)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image to GHCR
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/shaileshjb37/dvc_wwe:latest
            ghcr.io/shaileshjb37/dvc_wwe:${{ github.sha }}
          platforms: linux/amd64,linux/arm64


      - name: Complete job
        run: echo "Docker build & push finished"
